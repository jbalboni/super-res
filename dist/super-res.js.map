{"version":3,"sources":["super-res.js","src/utils.js","src/request.js","src/ResourceAction.js","src/super-res.js"],"names":[],"mappings":"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","file":"super-res.js","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('q'), require('route-parser'), require('cache-manager'), require('superagent'), require('methods')) :\n  typeof define === 'function' && define.amd ? define(['q', 'route-parser', 'cache-manager', 'superagent', 'methods'], factory) :\n  global.superRes = factory(global.Q, global.Route, global.cacheManager, global.sa, global.methods)\n}(this, function (Q, Route, cacheManager, sa, methods) { 'use strict';\n\n  var utils_js__assign = utils_js__assign || require('object.assign');\n\n  function assignOptions(...opts) {\n    let result = {};\n\n    opts.reduce((result, opt)=> {\n      if(opt) {\n        for(let i in opt) {\n          if(typeof opt[i] === 'object' && opt[i] !== null) {\n            if(Array.isArray(opt[i])) {\n              if(!Array.isArray(result[i])) {\n                result[i] = [];\n              }\n              result[i] = result[i].concat(opt[i]);\n\n            } else {\n              if(typeof result[i] !== 'object' || result[i] === null || Array.isArray(result[i])) {\n                result[i] = {};\n              }\n              utils_js__assign(result[i], opt[i]); //1 depth merging only.\n            }\n          } else {\n            opt[i] !== undefined && (result[i] = opt[i]);\n          }\n        }\n      }\n      return result;\n    }, result);\n\n    return result;\n  }\n\n  const defaultOpts = {\n    responseType: 'json',\n    transformRequest: [],\n    catchRequestError: [],\n    transformResponse: [],\n    catchResponseError: [],\n    withCredentials: false,\n    cache: null\n  };\n\n  function request (method, url, options) {\n    options = assignOptions(defaultOpts, options);\n\n    let curReq = sa(method, url);\n    curReq.accept(options.responseType);\n    if (options.headers) {\n      curReq.set(options.headers);\n    }\n\n    if (options.timeout) {\n      curReq.timeout(options.timeout);\n    } else {\n      curReq.clearTimeout();\n    }\n\n    if (options.withCredentials) {\n      curReq.withCredentials();\n    }\n\n    let originalEnd = curReq.end;\n    curReq.end = function (fn) {\n      if (curReq._data && typeof curReq._data === 'object') {\n        try {\n          curReq._data = options.transformRequest.reduce(\n            (memo, transform) => transform.call(curReq, memo, curReq.header),\n            curReq._data\n          );\n        } catch(e) {\n          options.catchRequestError.reduce(\n            (promise, catchFunc) => promise.catch(catchFunc),\n            Q.Promise((resolve, reject) => reject(e))\n          )\n          .then(fn, fn);\n          return this;\n        }\n      }\n      return originalEnd.call(curReq, (err, res)=>{\n        if (err) {\n          options.catchResponseError.reduce(\n            (promise, catchFunc) => promise.catch(catchFunc),\n            Q.Promise((resolve, reject) => reject(err))\n          )\n          .then(fn, fn);\n        } else {\n          try {\n            res.body = options.transformResponse.reduce(\n              (memo, transform) => transform.call(res, memo),\n              res.body\n            );\n          } catch(e) {\n            return Q(e).then(fn);\n          }\n          return Q.spread([null, res], fn);\n        }\n      });\n    };\n\n    return curReq;\n  }\n\n  methods.forEach(function(method){\n    var name = 'delete' == method ? 'del' : method;\n    method = method.toUpperCase();\n    Object.defineProperty(request, name, {\n      value: function(url, data, fn, options){\n        if ('function' === typeof data) {\n          options = fn;\n          fn = data;\n          data = null;\n        }\n        var req = request(method, url, options);\n        if (data) {\n          req.send(data);\n        }\n        fn && req.end(fn);\n        return req;\n      },\n      enumerable: true\n    });\n  });\n\n  Object.defineProperty(request, 'config', {\n    value: defaultOpts\n  });\n\n  var ResourceAction_js__assign = ResourceAction_js__assign || require('object.assign');\n\n  const actionDefaults = {\n    method: 'GET',\n    transformRequest: [],\n    cache: null\n  };\n\n  function moveDataToParam(data, header) {\n    data && this.query(data);\n    return null\n  }\n\n  function getCacheKey(params, data) {\n    return JSON.stringify(params || {}) + JSON.stringify(data || {});\n  }\n\n  class ResourceAction {\n    constructor(url, defaultParams, action) {\n      this.config = assignOptions({url: url}, actionDefaults, action);\n\n      if(this.config.method === 'GET') {\n        this.config.transformRequest || (this.config.transformRequest = []);\n        this.config.transformRequest.push(moveDataToParam);\n      } else if((this.config.method === 'POST' ||\n        this.config.method === 'PUT' ||\n        this.config.method === 'PATCH')) {\n        this.hasData = true;\n      }\n\n      this.route = new Route(this.config.url);\n      this.defaultParams = defaultParams;\n\n      this.extraParams = {};\n      for(let i in defaultParams) {\n        let param = defaultParams[i];\n        if(typeof param === 'function') {\n          this.extraParams[i] = param;\n        } else if(typeof param === 'string' && param[0] === '@') {\n          this.extraParams[i] = param.slice(1);\n        } else {\n          continue;\n        }\n        delete this.defaultParams[i];\n      }\n\n      if (this.config.cache === true) {\n        this.config.cache = cacheManager.caching({store: 'memory', max: 100, ttl: 1200});\n      }\n    }\n\n    buildRequest(params, data) {\n      let method = this.config.method.toLowerCase();\n      let url = this.route.reverse(params);\n\n      for(let i in this.route.match(url)) {\n        delete params[i];\n      }\n      let empty = true;\n      if(params) {\n        for(let i in params) {\n          empty = false;\n          break;\n        }\n      }\n\n      let currentRequest = request[method === 'delete' ? 'del' : method](url, null, null, this.config);\n\n      if(!empty) {\n        currentRequest.query(params);\n      }\n\n      if (data) {\n        currentRequest.send(data);\n      }\n\n      return currentRequest;\n    }\n    makeRequest(params, data) {\n      let deferred = Q.defer();\n\n      if(arguments.length == 1 && this.hasData) {\n        data = params;\n        params = undefined;\n      }\n\n      let extraP = {};\n      for(let i in this.extraParams) {\n        let p = this.extraParams[i], result;\n        if(typeof p === 'function') {\n          result = p();\n        } else {\n          result = data[p];\n        }\n        result && (extraP[i] = result);\n      }\n\n      let fullParams = ResourceAction_js__assign({}, this.defaultParams, extraP, params);\n\n      let doRequest = () => {\n        this.buildRequest(fullParams, data)\n            .end((err, res) => {\n              if (err) {\n                deferred.reject(err);\n              } else {\n\n                if (this.config.cache) {\n                  this.config.cache.set(getCacheKey(fullParams, data), res.body);\n                }\n\n                deferred.resolve(res.body);\n              }\n            });\n      };\n\n      if (this.config.cache && this.config.method.toLowerCase() === 'get') {\n        let key = getCacheKey(fullParams, data);\n        this.config.cache.get(key, (err, result) => {\n          if (err) {\n            deferred.reject(err);\n          } else if (result) {\n            deferred.resolve(result);\n          } else {\n            doRequest();\n          }\n        })\n      } else {\n        doRequest();\n      }\n\n      return deferred.promise;\n    }\n  }\n\n  var super_res__assign = super_res__assign || require('object.assign');\n\n  let super_res__superRes = {};\n\n  function generateDefaultActions(url, defaultParams, commonOptions) {\n    let resource = {};\n\n    let action = new ResourceAction(url, defaultParams, super_res__assign({}, commonOptions));\n    resource.get = action.makeRequest.bind(action);\n    resource.query = resource.get;\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, commonOptions, {method: 'POST'}));\n    resource.save = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, commonOptions, {method: 'PUT'}));\n    resource.put = action.makeRequest.bind(action);\n\n    action = new ResourceAction(url, defaultParams, super_res__assign({}, commonOptions, {method: 'DELETE'}));\n    resource.remove = action.makeRequest.bind(action);\n    resource['delete'] = resource.remove;\n\n    return resource;\n  }\n\n  super_res__superRes.resource = (url, defaultParams, actions, commonOptions) => {\n    let resource = generateDefaultActions(url, defaultParams, commonOptions);\n    if (actions) {\n      Object.getOwnPropertyNames(actions).forEach((name) => {\n        let action = new ResourceAction(url, defaultParams, actions[name]);\n        resource[name] = function (...args) {\n          action.makeRequest(...args);\n        }\n      });\n    }\n    return resource;\n  };\n\n  super_res__superRes.request = request;\n  super_res__superRes.config = request.config;\n\n  super_res__superRes.promiseWrapper = function promiseWrapper(wrapperFunc) {\n    return (resource) => {\n      let proxiedResource = super_res__assign({}, resource);\n      Object.getOwnPropertyNames(resource).forEach((name) => {\n        let actionFunction = proxiedResource[name];\n        proxiedResource[name] = function (...args) {\n          let promise = actionFunction.apply(proxiedResource, args);\n          return wrapperFunc(promise);\n        }\n      });\n      return proxiedResource;\n    }\n  };\n\n  var super_res = super_res__superRes;\n\n  return super_res;\n\n}));\n","var assign = assign || require('object.assign');\n\nexport function assignOptions(...opts) {\n  let result = {};\n\n  opts.reduce((result, opt)=> {\n    if(opt) {\n      for(let i in opt) {\n        if(typeof opt[i] === 'object' && opt[i] !== null) {\n          if(Array.isArray(opt[i])) {\n            if(!Array.isArray(result[i])) {\n              result[i] = [];\n            }\n            result[i] = result[i].concat(opt[i]);\n\n          } else {\n            if(typeof result[i] !== 'object' || result[i] === null || Array.isArray(result[i])) {\n              result[i] = {};\n            }\n            assign(result[i], opt[i]); //1 depth merging only.\n          }\n        } else {\n          opt[i] !== undefined && (result[i] = opt[i]);\n        }\n      }\n    }\n    return result;\n  }, result);\n\n  return result;\n}","import Q from 'q';\nimport sa from 'superagent';\nimport methods from 'methods';\nimport {assignOptions} from './utils.js';\n\nconst defaultOpts = {\n  responseType: 'json',\n  transformRequest: [],\n  catchRequestError: [],\n  transformResponse: [],\n  catchResponseError: [],\n  withCredentials: false,\n  cache: null\n};\n\nfunction request (method, url, options) {\n  options = assignOptions(defaultOpts, options);\n\n  let curReq = sa(method, url);\n  curReq.accept(options.responseType);\n  if (options.headers) {\n    curReq.set(options.headers);\n  }\n\n  if (options.timeout) {\n    curReq.timeout(options.timeout);\n  } else {\n    curReq.clearTimeout();\n  }\n\n  if (options.withCredentials) {\n    curReq.withCredentials();\n  }\n\n  let originalEnd = curReq.end;\n  curReq.end = function (fn) {\n    if (curReq._data && typeof curReq._data === 'object') {\n      try {\n        curReq._data = options.transformRequest.reduce(\n          (memo, transform) => transform.call(curReq, memo, curReq.header),\n          curReq._data\n        );\n      } catch(e) {\n        options.catchRequestError.reduce(\n          (promise, catchFunc) => promise.catch(catchFunc),\n          Q.Promise((resolve, reject) => reject(e))\n        )\n        .then(fn, fn);\n        return this;\n      }\n    }\n    return originalEnd.call(curReq, (err, res)=>{\n      if (err) {\n        options.catchResponseError.reduce(\n          (promise, catchFunc) => promise.catch(catchFunc),\n          Q.Promise((resolve, reject) => reject(err))\n        )\n        .then(fn, fn);\n      } else {\n        try {\n          res.body = options.transformResponse.reduce(\n            (memo, transform) => transform.call(res, memo),\n            res.body\n          );\n        } catch(e) {\n          return Q(e).then(fn);\n        }\n        return Q.spread([null, res], fn);\n      }\n    });\n  };\n\n  return curReq;\n}\n\nmethods.forEach(function(method){\n  var name = 'delete' == method ? 'del' : method;\n  method = method.toUpperCase();\n  Object.defineProperty(request, name, {\n    value: function(url, data, fn, options){\n      if ('function' === typeof data) {\n        options = fn;\n        fn = data;\n        data = null;\n      }\n      var req = request(method, url, options);\n      if (data) {\n        req.send(data);\n      }\n      fn && req.end(fn);\n      return req;\n    },\n    enumerable: true\n  });\n});\n\nObject.defineProperty(request, 'config', {\n  value: defaultOpts\n});\n\nexport default request;","var assign = assign || require('object.assign');\n\nimport Q from 'q';\nimport Route from 'route-parser';\nimport cacheManager from 'cache-manager';\n\nimport request from './request.js';\nimport {assignOptions} from './utils.js'\n\nconst actionDefaults = {\n  method: 'GET',\n  transformRequest: [],\n  cache: null\n};\n\nfunction moveDataToParam(data, header) {\n  data && this.query(data);\n  return null\n}\n\nfunction getCacheKey(params, data) {\n  return JSON.stringify(params || {}) + JSON.stringify(data || {});\n}\n\nexport default class ResourceAction {\n  constructor(url, defaultParams, action) {\n    this.config = assignOptions({url: url}, actionDefaults, action);\n\n    if(this.config.method === 'GET') {\n      this.config.transformRequest || (this.config.transformRequest = []);\n      this.config.transformRequest.push(moveDataToParam);\n    } else if((this.config.method === 'POST' ||\n      this.config.method === 'PUT' ||\n      this.config.method === 'PATCH')) {\n      this.hasData = true;\n    }\n\n    this.route = new Route(this.config.url);\n    this.defaultParams = defaultParams;\n\n    this.extraParams = {};\n    for(let i in defaultParams) {\n      let param = defaultParams[i];\n      if(typeof param === 'function') {\n        this.extraParams[i] = param;\n      } else if(typeof param === 'string' && param[0] === '@') {\n        this.extraParams[i] = param.slice(1);\n      } else {\n        continue;\n      }\n      delete this.defaultParams[i];\n    }\n\n    if (this.config.cache === true) {\n      this.config.cache = cacheManager.caching({store: 'memory', max: 100, ttl: 1200});\n    }\n  }\n\n  buildRequest(params, data) {\n    let method = this.config.method.toLowerCase();\n    let url = this.route.reverse(params);\n\n    for(let i in this.route.match(url)) {\n      delete params[i];\n    }\n    let empty = true;\n    if(params) {\n      for(let i in params) {\n        empty = false;\n        break;\n      }\n    }\n\n    let currentRequest = request[method === 'delete' ? 'del' : method](url, null, null, this.config);\n\n    if(!empty) {\n      currentRequest.query(params);\n    }\n\n    if (data) {\n      currentRequest.send(data);\n    }\n\n    return currentRequest;\n  }\n  makeRequest(params, data) {\n    let deferred = Q.defer();\n\n    if(arguments.length == 1 && this.hasData) {\n      data = params;\n      params = undefined;\n    }\n\n    let extraP = {};\n    for(let i in this.extraParams) {\n      let p = this.extraParams[i], result;\n      if(typeof p === 'function') {\n        result = p();\n      } else {\n        result = data[p];\n      }\n      result && (extraP[i] = result);\n    }\n\n    let fullParams = assign({}, this.defaultParams, extraP, params);\n\n    let doRequest = () => {\n      this.buildRequest(fullParams, data)\n          .end((err, res) => {\n            if (err) {\n              deferred.reject(err);\n            } else {\n\n              if (this.config.cache) {\n                this.config.cache.set(getCacheKey(fullParams, data), res.body);\n              }\n\n              deferred.resolve(res.body);\n            }\n          });\n    };\n\n    if (this.config.cache && this.config.method.toLowerCase() === 'get') {\n      let key = getCacheKey(fullParams, data);\n      this.config.cache.get(key, (err, result) => {\n        if (err) {\n          deferred.reject(err);\n        } else if (result) {\n          deferred.resolve(result);\n        } else {\n          doRequest();\n        }\n      })\n    } else {\n      doRequest();\n    }\n\n    return deferred.promise;\n  }\n}","var assign = assign || require('object.assign');\n\nimport Q from 'q';\n\nimport ResourceAction from './ResourceAction.js';\nimport request from './request.js'\n\nlet superRes = {};\n\nfunction generateDefaultActions(url, defaultParams, commonOptions) {\n  let resource = {};\n\n  let action = new ResourceAction(url, defaultParams, assign({}, commonOptions));\n  resource.get = action.makeRequest.bind(action);\n  resource.query = resource.get;\n\n  action = new ResourceAction(url, defaultParams, assign({}, commonOptions, {method: 'POST'}));\n  resource.save = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, commonOptions, {method: 'PUT'}));\n  resource.put = action.makeRequest.bind(action);\n\n  action = new ResourceAction(url, defaultParams, assign({}, commonOptions, {method: 'DELETE'}));\n  resource.remove = action.makeRequest.bind(action);\n  resource['delete'] = resource.remove;\n\n  return resource;\n}\n\nsuperRes.resource = (url, defaultParams, actions, commonOptions) => {\n  let resource = generateDefaultActions(url, defaultParams, commonOptions);\n  if (actions) {\n    Object.getOwnPropertyNames(actions).forEach((name) => {\n      let action = new ResourceAction(url, defaultParams, actions[name]);\n      resource[name] = function (...args) {\n        action.makeRequest(...args);\n      }\n    });\n  }\n  return resource;\n};\n\nsuperRes.request = request;\nsuperRes.config = request.config;\n\nsuperRes.promiseWrapper = function promiseWrapper(wrapperFunc) {\n  return (resource) => {\n    let proxiedResource = assign({}, resource);\n    Object.getOwnPropertyNames(resource).forEach((name) => {\n      let actionFunction = proxiedResource[name];\n      proxiedResource[name] = function (...args) {\n        let promise = actionFunction.apply(proxiedResource, args);\n        return wrapperFunc(promise);\n      }\n    });\n    return proxiedResource;\n  }\n};\n\nexport default superRes;\n"],"sourceRoot":"/source/"}